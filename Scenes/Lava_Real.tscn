[gd_scene load_steps=21 format=2]

[ext_resource path="res://Assets/Lava/Lava.obj" type="ArrayMesh" id=1]
[ext_resource path="res://Assets/Ground/Cauldron_Base_Color.png" type="Texture" id=2]
[ext_resource path="res://Assets/Ground/Cauldron_Metallic.png" type="Texture" id=3]
[ext_resource path="res://Assets/Ground/Cauldron_Normal_DirectX.png" type="Texture" id=4]
[ext_resource path="res://Assets/Ground/Cauldron_Roughness.png" type="Texture" id=5]
[ext_resource path="res://Assets/Ground/Ground_BaseColor.png" type="Texture" id=6]
[ext_resource path="res://Assets/Ground/Ground_Normal.png" type="Texture" id=7]
[ext_resource path="res://Assets/Ground/Ground_Roughness.png" type="Texture" id=8]
[ext_resource path="res://Assets/Lava/Lava_BaseColor.png" type="Texture" id=9]

[sub_resource type="SpatialMaterial" id=1]
albedo_texture = ExtResource( 2 )
metallic_texture = ExtResource( 3 )
roughness_texture = ExtResource( 5 )
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 4 )

[sub_resource type="SpatialMaterial" id=2]
albedo_texture = ExtResource( 6 )
roughness_texture = ExtResource( 8 )
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 7 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeTransformVecMult" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 9 )

[sub_resource type="VisualShaderNodeVec3Uniform" id=8]
uniform_name = "Veform"

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
output_port_for_preview = 0
constant = Vector3( 1, 1, 1 )

[sub_resource type="VisualShader" id=10]
code = "shader_type spatial;
uniform sampler2D tex_frg_4;


void vertex() {
// Sortie:0

}

void fragment() {
// Entr√©e:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	vec4 tex_frg_4_read = texture( tex_frg_4 , n_out2p0.xy );
	n_out4p0 = tex_frg_4_read.rgb;
	n_out4p1 = tex_frg_4_read.a;

// Sortie:0
	ALBEDO = n_out4p0;

}

void light() {
// Sortie:0

}
"
graph_offset = Vector2( -525.233, -130.417 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -1060, 300 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -100, 240 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( -1220, -140 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( -780, -380 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( -920, 80 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -240, -260 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -500, 80 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )

[node name="Lava" type="Spatial"]

[node name="Lava" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.0232148 )
mesh = ExtResource( 1 )
material/0 = SubResource( 1 )
material/1 = SubResource( 2 )
material/2 = SubResource( 11 )
